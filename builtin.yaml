bracket: \((.+)\) # Get content inside bracket

operator: ~(?:\+|-|\*|\\)~ # Arithmetic operators

#To match indented code
ind: (\n(?:((?:\t|\s)+)).*(?:(?:\n\ # For multiline

ent: .*)*\n*)*) # End line
#It give two tokens(1-indented code,2-tab used for indentation)
#Usage: <ind>No of tokens before+2<ent>
#Example
#regex: fun (\w+)<bracket>:<ind>4<ent>
#tokens: [funame,args,code,tab]

tab: ^((?:\t|\s)*) # Match tab/space

indentation: (\t|\s) # Indentation characters

number: (\d+(?:\.\d+)?) # Match numbers

string: ("(?:[^"\\]|\\.)*") # Match double-quoted strings

comment: (#[^\n]*) # Match single-line comments

Email Address:
Pattern: [A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,7}

URLs:
Pattern: https?:\/\/\S+

Dates (MM/DD/YYYY):
Pattern: \d{1,2}\/\d{1,2}\/\d{4}

IP Addresses:
Pattern: \b(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b

File Paths:
Pattern: (?:\/[\w-]+)+\/?

Hashes (MD5, SHA-1, SHA-256):
Pattern: \b[a-f0-9]{32}\b
Pattern: \b[a-f0-9]{40}\b
Pattern: \b[a-f0-9]{64}\b

Code Comments (C-style):
Pattern for multiline comments: \/\*[\s\S]*?\*\/
Pattern for single-line comments: \/\/.*$

HTML Tags:
Pattern: <\w+\b

Code Function Names:
Pattern: \b\w+\s*(?=\()
